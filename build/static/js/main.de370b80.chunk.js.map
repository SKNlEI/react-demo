{"version":3,"sources":["logo.svg","views/home/Test.tsx","views/about/About.tsx","views/tableCrad/tableNav/TableNav.tsx","views/tableCrad/tableContent/TableContent.tsx","views/tableCrad/TableCard.tsx","views/funcComponent/FuncComponent.tsx","views/addNumber/addNumber.tsx","store/actions/actions.ts","views/webstorm/Websters.tsx","App.tsx","serviceWorker.ts","store/reducer/reducer.ts","store/index.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","Test","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","swiperId","Swiper","concat","objectSpread","config","index","slideTo","console","log","JSON","stringify","slides","className","react_default","a","createElement","id","children","Component","About","swiperNav","swiperPage","changeIndex","state","isActive","React","createRef","current","getIndex","_this2","watchSlidesProgress","watchSlidesVisibility","slidesPerView","observer","observeSlideChildren","on","tap","clickedIndex","config1","pagination","el","type","spaceBetween","centeredSlides","slideChange","page","Nav","setState","activeIndex","update","includes","thumbsPerNav","Math","floor","width","offsetWidth","Test_Test","name","ref","onClick","navList","TableNav","_ref","handleIndex","map","v","key","contentData","TableContent","TableCard","tableCrad_tableNav_TableNav","bind","tableCrad_tableContent_TableContent","FuncComponent","useState","_useState","_useState2","slicedToArray","count","setCount","useEffect","document","title","addNumber","_this$props","addCount","minCount","connect","addnumber","dispatch","number","Websters","AddNumber","App","src","logo","alt","views_about_About","TableCard_TableCard","funcComponent_FuncComponent","views_addNumber_addNumber","Websters_Websters","Boolean","window","location","hostname","match","combineReducers","arguments","length","undefined","action","addTodo","store","createStore","reducer","applyMiddleware","logger","getState","ReactDOM","render","es","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.de370b80.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, {Component} from 'react'\r\nimport Swiper from 'swiper'\r\nimport 'swiper/dist/css/swiper.css'\r\nimport './Test.css'\r\n\r\ninterface Iprops {\r\n  config?: any,\r\n  swiperId: string,\r\n  name?: string\r\n}\r\n// let swiperId:any\r\nexport default class Test extends Component<Iprops> {\r\n  swiperId:any\r\n  constructor(props:any) {\r\n    super(props)\r\n  }\r\n  componentDidMount () {\r\n    this.swiperId = new Swiper (`#${this.props.swiperId}`,{\r\n      ...this.props.config,\r\n    })\r\n  }\r\n  getIndex (index:number) {\r\n    this.swiperId.slideTo(index);\r\n  }\r\n  getClassName (index: number) {\r\n    console.log('getClassName',JSON.stringify(this.swiperId.slides[index].className))\r\n  }\r\n  render () {\r\n    return (\r\n      <div>\r\n        <div id={this.props.swiperId} className=\"swiper-container id1\">\r\n          <div className=\"swiper-wrapper\">\r\n            {this.props.children}\r\n          </div>\r\n          <div className=\"swiper-pagination\"></div>\r\n          </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, {Component} from 'react'\r\nimport SwiperCom from '../home/Test'\r\nimport './About.css'\r\n\r\nclass About extends Component<any, any> {\r\n  swiperNav:any\r\n  swiperPage: any\r\n  constructor(props:any) {\r\n    super(props)\r\n    this.state = {\r\n      isActive: 0\r\n    }\r\n    this.swiperNav = React.createRef()\r\n    this.swiperPage = React.createRef()\r\n  }\r\n  changeIndex = (index:number) => {\r\n    console.log('About', index)\r\n    // this.swiperPage.current.getIndex(index)\r\n    // console.log('this.swiperNav.current.swiperId.clickIndex',this.swiperNav.current.swiperId.clickedIndex)\r\n    // this.swiperPage.current.getIndex(this.swiperNav.current.swiperId.clickedIndex)\r\n    // this.swiperPage.current.swiperId.on('click', () => {\r\n    //   // this.clickActive\r\n    //   console.log(this.swiperNav.current.swiperId.activeIndex)\r\n    // })\r\n  }\r\n  componentWillUpdate () {\r\n\r\n  }\r\n  spanClick (index:number) {\r\n    this.swiperPage.current.getIndex(index)\r\n  }\r\n  render () {\r\n    const config = {\r\n      watchSlidesProgress : true,\r\n      watchSlidesVisibility : true,\r\n      slidesPerView: 3,\r\n      observer:true,\r\n      observeSlideChildren:true,\r\n      // centeredSlides: true,\r\n      on: {\r\n        tap: () => {\r\n          this.swiperPage.current.getIndex(this.swiperNav.current.swiperId.clickedIndex)\r\n        }\r\n      }\r\n\r\n    }\r\n    const config1 = {\r\n      pagination: {\r\n        el: '.swiper-pagination',\r\n        type: 'fraction',\r\n      },\r\n      slidesPerView: 'auto',\r\n      spaceBetween: 20,\r\n      centeredSlides: true,\r\n      on: {\r\n        slideChange: () => {\r\n          const page = this.swiperPage.current.swiperId\r\n          const Nav = this.swiperNav.current.swiperId\r\n          this.setState({isActive: page.activeIndex})\r\n          const {isActive} = this.state\r\n          Nav.update()\r\n          if (!Nav.slides[isActive].className.includes('swiper-slide-visible')) {\r\n            console.log(`外层isActive ==> ${isActive},,Nav.activeIndex==> ${Nav.activeIndex}`)\r\n            if (isActive > Nav.activeIndex) {\r\n              console.log(222222222)\r\n              var thumbsPerNav = Math.floor(Nav.width / Nav.slides[isActive].offsetWidth) - 1\r\n              console.log(`isActive====> ${isActive}, thumbsPerNav===> ${thumbsPerNav}, isActive - thumbsPerNav ===> ${isActive - thumbsPerNav}`)\r\n              Nav.slideTo(isActive - thumbsPerNav)\r\n            } else {\r\n              console.log(333333)\r\n              Nav.slideTo(page.activeIndex)\r\n            }\r\n          }\r\n        }\r\n    }\r\n    }\r\n    return (\r\n      <div>\r\n        <div className=\"about-id\">\r\n          {/* <div>\r\n            <span className={`test-span ${this.state.isActive === 0 ? \"test-span-active\" : ''} `} onClick={() => this.spanClick(0)}>1</span>\r\n            <span className={`test-span ${this.state.isActive === 1 ? \"test-span-active\" : ''} `} onClick={() => this.spanClick(1)}>2</span>\r\n            <span className={`test-span ${this.state.isActive === 2 ? \"test-span-active\" : ''} `} onClick={() => this.spanClick(2)}>3</span>\r\n          </div> */}\r\n          <SwiperCom config={config} swiperId={\"swiperNav\"} name=\"swiperNav\" ref={this.swiperNav}>\r\n            <div className={`swiper-slide bg-1 ${this.state.isActive === 0 ? \"active-nav\" : ''}`} onClick={() => this.changeIndex(0)}>Slide 1</div>\r\n            <div className={`swiper-slide bg-2 ${this.state.isActive === 1 ? \"active-nav\" : ''}`} onClick={() =>this.changeIndex(1)}>Slide 2</div>\r\n            <div className={`swiper-slide bg-3 ${this.state.isActive === 2 ? \"active-nav\" : ''}`} onClick={() => this.changeIndex(2)}>Slide 3</div>\r\n            <div className={`swiper-slide bg-2 ${this.state.isActive === 3 ? \"active-nav\" : ''}`} onClick={() =>this.changeIndex(3)}>Slide 4</div>\r\n            <div className={`swiper-slide bg-3 ${this.state.isActive === 4 ? \"active-nav\" : ''}`} onClick={() => this.changeIndex(4)}>Slide 5</div>\r\n            <div className={`swiper-slide bg-2 ${this.state.isActive === 5 ? \"active-nav\" : ''}`} onClick={() =>this.changeIndex(5)}>Slide 6</div>\r\n          </SwiperCom>\r\n          <SwiperCom config={config1} swiperId={\"swiperPage\"} ref={this.swiperPage}>\r\n            <div className=\"swiper-slide bg-1\">Slide 1</div>\r\n            <div className=\"swiper-slide bg-2\">Slide 2</div>\r\n            <div className=\"swiper-slide bg-3\">Slide 3</div>\r\n            <div className=\"swiper-slide bg-3\">Slide 4</div>\r\n            <div className=\"swiper-slide bg-3\">Slide 5</div>\r\n            <div className=\"swiper-slide bg-3\">Slide 6</div>\r\n          </SwiperCom>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default About","import React from 'react'\r\nimport './TableNav.css'\r\n\r\nconst navList = ['nav1', 'nav2', 'nav3']\r\ninterface Iprops {\r\n   handleIndex: (index: number) => void,\r\n   activeIndex: number\r\n}\r\nconst TableNav = ({handleIndex, activeIndex}:Iprops) => (\r\n  <div className=\"table-nav\">\r\n    {navList.map((v, index) => (\r\n      <span onClick={() => handleIndex(index) } key={index}\r\n        className={activeIndex === index? \"active\" : ''}>{v}</span>\r\n    ))}\r\n  </div>\r\n)\r\n\r\nexport default TableNav","import React from 'react'\r\nimport './TableContent.css'\r\n\r\ninterface Iprops {\r\n  activeIndex: number\r\n}\r\nconst contentData = ['content1', 'content2', 'content3']\r\nconst TableContent = ({activeIndex}: Iprops) => (\r\n  <div className=\"table-content\">\r\n    {contentData.map((v, index) => {\r\n      return activeIndex === index ? (\r\n        <div key={index} className=\"active-content\">\r\n          <h1>{v}</h1>\r\n          <div>this is {index} page</div>\r\n        </div>\r\n      ) : null\r\n    })}\r\n  </div>\r\n)\r\n\r\nexport default TableContent","import React, {Component} from 'react'\r\nimport TableNav from './tableNav/TableNav'\r\nimport TableContent from './tableContent/TableContent'\r\n\r\nexport default class TableCard extends Component<any, any> {\r\n  constructor(props:any) {\r\n    super(props)\r\n    this.state = {\r\n      activeIndex: 0\r\n    }\r\n  }\r\n  handleIndex (index:number) {\r\n    console.log(index)\r\n    this.setState({activeIndex: index})\r\n  } \r\n  render () {\r\n    const {activeIndex} = this.state\r\n    return (\r\n      <div className=\"table-card\">\r\n        <h1>this is tableCrad page</h1>\r\n        <TableNav handleIndex={this.handleIndex.bind(this)} activeIndex={activeIndex}/>\r\n        <TableContent activeIndex={activeIndex}/>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, {useState, useEffect} from 'react'\r\n\r\nconst FuncComponent = () => {\r\n  console.log(useState)\r\n  const [count, setCount] = useState(0)\r\n  const handleClick = () => {\r\n    setCount(count+1)\r\n  }\r\n  useEffect(() => {\r\n    document.title = `you click ${count} times`\r\n  })\r\n  return (\r\n    <div>\r\n      <p>你点击了{count}次</p>\r\n      <button onClick={handleClick}>点击加1</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FuncComponent","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {bindActionCreators} from 'redux'\r\nimport { addCount, minCount } from './../../store/actions/actions'\r\n\r\n\r\nclass addNumber extends React.Component<any, any> {\r\n  render () {\r\n    const {count, addCount, minCount} = this.props \r\n    return (\r\n      <div>\r\n        <h1>this is test redux</h1>\r\n        <p>\r\n          <button onClick={() => minCount(1)}>-</button>\r\n          <span>{count}</span>\r\n          <button onClick={() => addCount(5)}>+</button>\r\n        </p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = (state:any) =>({\r\n  count: state.addnumber\r\n})\r\n\r\n// const mapDispatchToProps = (dispatch:any) => bindActionCreators({addCount, minCount}, dispatch)\r\nconst mapDispatchToProps = (dispatch:any) => ({\r\n    addCount: (number:number) => dispatch(addCount(number)),\r\n    minCount: (number:number) => dispatch(minCount(number))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(addNumber)\r\n\r\n","export const addCount = (number:number) => ({\r\n  type: 'ADD_COUNT',\r\n  number\r\n})\r\n\r\nexport const minCount = (number:number) => ({\r\n  type: 'MIN_COUNT',\r\n  number\r\n})","import React, {Component} from 'react'\r\n\r\nexport default class Websters extends Component {\r\n  render () {\r\n    return (\r\n      <div>\r\n        <h1>this is webstorm page</h1>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react'\nimport Test from './views/about/About'\nimport logo from './logo.svg'\nimport './App.css'\nimport TableCard from './views/tableCrad/TableCard'\nimport FuncComponent from './views/funcComponent/FuncComponent'\nimport AddNumber from './views/addNumber/addNumber'\nimport Websters from './views/webstorm/Websters'\n\nconsole.log(AddNumber)\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n            Learn React\n        </header>\n        <Test />\n        <TableCard />\n        <div>\n          <FuncComponent />\n        </div>\n        <AddNumber />\n        <Websters />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {combineReducers} from 'redux'\r\n\r\nconst addnumber = (state:number = 0, action:any) => {\r\n  switch(action.type) {\r\n    case 'ADD_COUNT':\r\n      return state + action.number\r\n    case 'MIN_COUNT':\r\n      return state - action.number\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst addTodo = (state:string = 'aaaa') => state\r\n\r\nexport default combineReducers({\r\n  addnumber,\r\n  addTodo\r\n})","import {createStore, applyMiddleware} from 'redux'\r\nimport logger from 'redux-logger'\r\nimport reducer from './reducer/reducer'\r\n\r\nconst store = createStore(reducer, applyMiddleware(logger))\r\nconsole.log(store.getState())\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux'\nimport store from './store'\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}